<template>
  <view class="container">
    <!-- 地图 -->
    <view class="content">
      <map id="map" wx:if="{{isready}}" longitude="{{longitude}}" latitude="{{latitude}}" scale="{{scale}}" bindcallouttap="markertap" bindmarkertap="markertap" markers="{{markers}}" show-location></map>
    </view>

    <!-- 底部栏 -->
    <view class="selectarea">
      <scroll-view class="scroll-view_H" scroll-x style="width: 100%;height:100px">
        <repeat for="{{resList}}" key="index" index="index" item="item">
          <view class="scroll-view-item_H  {{houseid == item.id ? 'active' : ''}}" bindtap="locateTo" id="{{item.id}}">
            <view class="item-num">{{index + 1}}</view>
            <view class="item-name">{{item.name}}</view>
          </view>
        </repeat>
      </scroll-view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import _ from 'lodash'
  import List from '../components/reslist'
  import host from '../config.js'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '杭州商品住房摇号查询'
    }
    components = {
      list: List
    }
    data = {
      isready: false,
      houseid: 0,
      markers: [],
      resList: [],
      longitude: 120.097046,
      latitude: 30.305318,
      scale: 12
    }
    onLoad() {
      this.init()
    }
    init() {
      var that = this
      var date = this.getNowFormatDate()
      return new Promise((resolve,reject) => {
        wx.request({
          url: host.service.getBuildingUrl,
          data: {
            date: date
          },
          method: 'POST',
          success: function(res){
            resolve(res.data.data)
          }
        })
      }).then(res => {
        var data = res
        var marker_new = []
        var list_new = []
        data.forEach((val) => {
          var lnglat = val.coordinate.split(',')
          var iconInfo = {
            id: val.id,
            latitude: parseFloat(lnglat[1]),
            longitude: parseFloat(lnglat[0]),
            width: 33,
            height: 33,
            title: val.building,
            callout:{
              content: val.building,
              display: 'ALWAYS',
              padding: 5,
              borderRadius: 50,
              bgColor: "#ffffff",
              color: "#333333",
              fontSize: 12
            },
            iconPath: "/resources/mark.png",
            anchor:{x:.5,y:1}
          }
          
          marker_new.push(iconInfo)
          list_new.push({
            id: val.id,
            name: val.building,
            lnglat: val.coordinate
          })
        })
        
        that.markers = marker_new
        that.resList = list_new
        that.isready = true
        that.$apply()
      })
    }
    getNowFormatDate() {
        var date = new Date();
        var seperator1 = "-";
        var seperator2 = ":";
        var month = date.getMonth() + 1;
        var strDate = date.getDate();
        if (month >= 1 && month <= 9) {
            month = "0" + month;
        }
        if (strDate >= 0 && strDate <= 9) {
            strDate = "0" + strDate;
        }
        var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate
                + " " + date.getHours() + seperator2 + date.getMinutes()
                + seperator2 + date.getSeconds();
        return currentdate;
    }
    toLocaleDate(UTCDateString){
      function formatFunc(str) {    //格式化显示
        return str > 9 ? str : '0' + str
      }
      var date = new Date(UTCDateString)
      var year = date.getFullYear();
      var mon = formatFunc(date.getMonth() + 1);
      var day = formatFunc(date.getDate())
      var hour = formatFunc(date.getHours());
      var min = formatFunc(date.getMinutes());
      var newdate = year + '-' + mon + '-' + day + ' ' + hour + ':' + min

      return newdate
    }
    changeTab(e){
      var index = e.currentTarget.id
      this.currentTabIndex = index
      this.$apply()
    }
    markertap(e) {
      var index = _.findIndex(this.markers,['id',e.markerId])
      var tapedMarker = this.markers[index]
      var id = tapedMarker.id
      wx.navigateTo({
        url: '/pages/detail?id=' + id
      })
    }
    locateTo(e){
      var id = e.currentTarget.id
      this.houseid = id
      var index = _.findIndex(this.markers,['id',id - 0])
      this.longitude = this.markers[index].longitude
      this.latitude = this.markers[index].latitude
      this.scale = 13
      this.$apply()
    }
    events = {
      'reGet': (p1,$event) => {
        this.selected = p1
        this.$apply()
        this.getRestaurant()
      },
      'locate': (lnglat) => {
        this.currentTabIndex = 0
        var lnglatarr = lnglat.split(',')
        this.longitude = parseFloat(lnglatarr[0])
        this.latitude = parseFloat(lnglatarr[1])
        // this.scale = 14
        this.$apply()
      }
    }
  }  
</script>
<style>
.hide {
  display: none;
}
.active {
  display: block;
}
#map {
  width: 100%;
  height: 100%;
}
.scroll-view_H{
   overflow:hidden;
}
.scroll-view-item_H{
  padding: 13px 5px;
  width:60px;
  display: inline-block;
}
.item-num{
  position: relative;
  margin:0 auto;
  width:30px;
  height:30px;
  line-height: 30px;
  text-align: center;
  border:1px solid #78e08f;
  border-radius:50%;
  font-size:14px;
}
.item-num:after{
  content: '';
  display: inline-block;
  position: absolute;
  right:-30px;
  top:13px;
  width:20px;
  height:1px;
  border-bottom: 1px dotted #78e08f;
}
.active .item-num{
  background: #78e08f;
  color: #fff
}
.scroll-view-item_H:last-child .item-num::after{
  display: none;
}
.item-name{
  width:60px;
  height: 40px;
  font-size: 12px;
  text-align: center;
  padding-top: 8px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap
  /* display:-webkit-box; 
  overflow:hidden; 
  -webkit-line-clamp:2;
  -webkit-box-orient:vertical;
  white-space: normal */
}
</style>
